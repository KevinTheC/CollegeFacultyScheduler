File is read in lines, which act as the "rows" and then are split into columns. Columns are accessed through enums that corespond to the column label on excel for readability
and ease of debugging. 4 enums are created for Campuses, Days, Times, and Rankings, with methods to parse into the enum. Other fields like ID, cell, and name are assigned
to primitives. Classes were made for more complex attributes like availability and courses.I just used the constructor to parse all the information, and created
getters and setters.

The splitting is done with regex that captures all of a seperator character (tab for tsv, comma for csv) that is not between a set of quotes.
The regex is as follows for cvs:
,(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)
Which essentially is checking if all double quotes after the comma value can be grouped into pairs of two until the end of the string.
Assuming all quotation marks are properly opened/closed, this regex captures all commas not enclosed in quotes, but if the csv file had a set of nested quotation marks
the regex would need to be rewritten. (probably with a lookback and lookahead instead of a simple lookahead)
Afterwards quotation marks generated by excel are removed.